const path = require('path')

const domain = 'dendra.science'
const hostname = `https://${domain}/`
const title = 'Dendra'
const description =
  'Dendra is a cyberinfrastructure project for real-time sensor data storage, retrieval, management, and curation.'

const googleMapsAPIKey = process.env.GOOGLE_MAPS_API_KEY
const googleTrackingId = process.env.GOOGLE_TRACKING_ID
const plausableEnabled = process.env.NODE_ENV === 'production'

const githubURL = 'https://github.com/DendraScience'
const infoEmail = 'metahuman@dendra.science'
const slackURL = 'https://dendra-science.slack.com'
const twitterURL = 'https://twitter.com/DendraScience'
const webSiteURL = process.env.WEB_SITE_URL || 'https://dendra.science'
const widgetsOnly = process.env.WIDGETS_ONLY === 'true'

module.exports = {
  /*
   ** Build configuration
   ** See https://nuxtjs.org/api/configuration-build/
   */
  build: {
    // analyze: true,
    extractCSS: {
      ignoreOrder: true
    },

    optimization: {
      splitChunks: {
        chunks: 'all',
        automaticNameDelimiter: '.',
        name: undefined,
        cacheGroups: {},
        maxSize: 256000
      }
    },

    extend(config, ctx) {
      if (ctx.isClient) {
        config.module.rules.push({
          test: /\.worker\.js$/,
          loader: 'worker-loader',
          exclude: /(node_modules)/,
          options: { outputModule: 'es6' }
        })
      }
    }
  },

  /*
   ** Nuxt.js dev-modules
   */
  buildModules: [
    // Doc: https://github.com/nuxt-community/eslint-module
    ['@nuxtjs/eslint-module', { cache: false }],
    '@nuxtjs/vuetify'
  ],

  /*
   ** Global CSS
   */
  css: ['~/assets/main'],

  /*
   ** Environment variables
   */
  env: {
    apiPath: process.env.API_PATH,
    apiURI: process.env.API_URI,
    datapointsMax: 288 * 365 * 10 * 4, // 10 years of 5 minute data for 4 datastreams
    domain,
    githubURL,
    googleMapsAPIKey,
    googleTrackingId,
    hostname,
    infoEmail,
    noaaNWSIcons:
      process.env.NOAA_NWS_ICONS_URL ||
      'https://dendrascience.github.io/noaa-nws-icons/jpg',
    plausableEnabled,
    slackURL,
    twitterURL,
    webSiteURL
  },

  /*
   ** Headers of the page
   ** See https://nuxtjs.org/api/configuration-head
   */
  head: {
    title,
    htmlAttrs: {
      lang: 'en'
    },
    meta: [
      { charset: 'utf-8' },
      {
        name: 'viewport',
        content:
          'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui'
      },
      {
        hid: 'description',
        name: 'description',
        content: description
      }
    ],
    link: [
      // Generated by http://www.favicomatic.com
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '57x57',
        href: '/apple-touch-icon-57x57.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '114x114',
        href: '/apple-touch-icon-114x114.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '72x72',
        href: '/apple-touch-icon-72x72.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '144x144',
        href: '/apple-touch-icon-144x144.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '60x60',
        href: '/apple-touch-icon-60x60.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '120x120',
        href: '/apple-touch-icon-120x120.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '76x76',
        href: '/apple-touch-icon-76x76.png'
      },
      {
        rel: 'apple-touch-icon-precomposed',
        sizes: '152x152',
        href: '/apple-touch-icon-152x152.png'
      },
      {
        rel: 'icon',
        type: 'image/png',
        href: '/favicon-196x196.png',
        sizes: '196x196'
      },
      {
        rel: 'icon',
        type: 'image/png',
        href: '/favicon-96x96.png',
        sizes: '96x96'
      },
      {
        rel: 'icon',
        type: 'image/png',
        href: '/favicon-32x32.png',
        sizes: '32x32'
      },
      {
        rel: 'icon',
        type: 'image/png',
        href: '/favicon-16x16.png',
        sizes: '16x16'
      },
      {
        rel: 'icon',
        type: 'image/png',
        href: '/favicon-128.png',
        sizes: '128x128'
      },
      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }
    ],
    script: [
      // For Global Site Tag (gtag.js) - Google Analytics
      { src: '/vendor/js/gtag.js', type: 'text/javascript' },
      {
        src: `https://www.googletagmanager.com/gtag/js?id=${googleTrackingId}`,
        type: 'text/javascript',
        async: 'async'
      }

      // For Google Tag Manager (gtm.js)
      // { src: '/vendor/js/gtm.js', type: 'text/javascript' },
      // {
      //   src: `https://www.googletagmanager.com/gtm.js?id=${googleTrackingId}`,
      //   type: 'text/javascript',
      //   async: 'async'
      // }
    ]
  },

  ignore: widgetsOnly
    ? [
        '/pages/*.vue',
        '/pages/companies/**',
        '/pages/equipment/**',
        '/pages/orgs/**'
      ]
    : ['/pages/widgets/**'],

  /*
   ** Customize the progress-bar color
   */
  loading: { color: '#fff' },

  /*
   ** Nuxt.js modules
   */
  modules: [
    // Doc: https: //github.com/robcresswell/nuxt-compress
    'nuxt-compress'
  ],

  /*
   ** Plugins to load before mounting the App
   ** https://nuxtjs.org/guide/plugins
   */
  plugins: [
    { src: '~/plugins/logger', ssr: false },
    { src: '~/plugins/tracker', ssr: false },
    { src: '~/plugins/route', ssr: false },
    { src: '~/plugins/vee-validate', ssr: false },
    { src: '~/plugins/ability', ssr: false },
    { src: '~/plugins/api', ssr: false },
    { src: '~/plugins/bus', ssr: false },
    { src: '~/plugins/date', ssr: false },
    { src: '~/plugins/highcharts', ssr: false },
    { src: '~/plugins/maps', ssr: false },
    { src: '~/plugins/global-filters', ssr: false },
    { src: '~/plugins/global-mixin', ssr: false },
    { src: '~/plugins/web-workers', ssr: false }
  ],

  router: {
    middleware: ['auth', 'ability']
  },

  /*
   ** Nuxt application source directory
   ** See https://nuxtjs.org/api/configuration-srcdir
   */
  srcDir: 'src',

  /*
   ** Nuxt rendering mode
   ** See https://nuxtjs.org/api/configuration-mode
   */
  ssr: false,

  /*
   ** Nuxt target
   ** See https://nuxtjs.org/api/configuration-target
   */
  target: 'static',

  telemetry: false,

  /*
   ** Vuetify module configuration
   ** https://github.com/nuxt-community/vuetify-module
   */
  vuetify: {
    defaultAssets: {
      icons: false
    },
    optionsPath: path.resolve('./vuetify.options.js'),
    treeShake: true
  }
}
